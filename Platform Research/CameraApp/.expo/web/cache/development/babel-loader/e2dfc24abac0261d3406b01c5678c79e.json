{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Platform } from 'expo-modules-core';\nimport CameraManager from \"../ExponentCameraManager\";\nexport var ConversionTables = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance\n};\nexport function convertNativeProps(props) {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n\n  var nativeProps = {};\n\n  for (var _ref of Object.entries(props)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var key = _ref2[0];\n    var value = _ref2[1];\n\n    if (typeof value === 'string' && ConversionTables[key]) {\n      nativeProps[key] = ConversionTables[key][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n\n  return nativeProps;\n}\nexport function ensureNativeProps(props) {\n  var newProps = convertNativeProps(props);\n\n  if (newProps.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (newProps.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n\n  return newProps;\n}","map":{"version":3,"sources":["../../src/utils/props.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,QAAyB,mBAAzB;AAUA,OAAO,aAAP;AAGA,OAAO,IAAM,gBAAgB,GAKzB;EACF,IAAI,EAAE,aAAa,CAAC,IADlB;EAEF,SAAS,EAAE,aAAa,CAAC,SAFvB;EAGF,SAAS,EAAE,aAAa,CAAC,SAHvB;EAIF,YAAY,EAAE,aAAa,CAAC;AAJ1B,CALG;AAYP,OAAM,SAAU,kBAAV,CAA6B,KAA7B,EAAgD;EACpD,IAAI,CAAC,KAAD,IAAU,OAAO,KAAP,KAAiB,QAA/B,EAAyC;IACvC,OAAO,EAAP;EACD;;EAED,IAAM,WAAW,GAAsB,EAAvC;;EAEA,iBAA2B,MAAM,CAAC,OAAP,CAAe,KAAf,CAA3B,EAAkD;IAAA;;IAAA,IAAtC,GAAsC;IAAA,IAAjC,KAAiC;;IAChD,IAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,gBAAgB,CAAC,GAAD,CAAjD,EAAwD;MACtD,WAAW,CAAC,GAAD,CAAX,GAAmB,gBAAgB,CAAC,GAAD,CAAhB,CAAsB,KAAtB,CAAnB;IACD,CAFD,MAEO;MACL,WAAW,CAAC,GAAD,CAAX,GAAmB,KAAnB;IACD;EACF;;EAED,OAAO,WAAP;AACD;AAED,OAAM,SAAU,iBAAV,CAA4B,KAA5B,EAA+C;EACnD,IAAM,QAAQ,GAAG,kBAAkB,CAAC,KAAD,CAAnC;;EAEA,IAAI,QAAQ,CAAC,gBAAb,EAA+B;IAC7B,QAAQ,CAAC,qBAAT,GAAiC,IAAjC;EACD;;EAED,IAAI,QAAQ,CAAC,eAAb,EAA8B;IAC5B,QAAQ,CAAC,mBAAT,GAA+B,IAA/B;EACD;;EAED,IAAI,QAAQ,CAAC,EAAT,KAAgB,SAApB,EAA+B;IAC7B,OAAO,QAAQ,CAAC,KAAhB;IACA,OAAO,QAAQ,CAAC,aAAhB;EACD;;EAED,IAAI,QAAQ,CAAC,EAAT,KAAgB,KAApB,EAA2B;IACzB,OAAO,QAAQ,CAAC,MAAhB;EACD;;EAED,OAAO,QAAP;AACD","sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport {\n  CameraNativeProps,\n  CameraType,\n  FlashMode,\n  AutoFocus,\n  WhiteBalance,\n  CameraProps,\n} from '../Camera.types';\nimport CameraManager from '../ExponentCameraManager';\n\n// Values under keys from this object will be transformed to native options\nexport const ConversionTables: {\n  type: Record<keyof typeof CameraType, CameraNativeProps['type']>;\n  flashMode: Record<keyof typeof FlashMode, CameraNativeProps['flashMode']>;\n  autoFocus: Record<keyof typeof AutoFocus, CameraNativeProps['autoFocus']>;\n  whiteBalance: Record<keyof typeof WhiteBalance, CameraNativeProps['whiteBalance']>;\n} = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance,\n};\n\nexport function convertNativeProps(props?: CameraProps): CameraNativeProps {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n\n  const nativeProps: CameraNativeProps = {};\n\n  for (const [key, value] of Object.entries(props)) {\n    if (typeof value === 'string' && ConversionTables[key]) {\n      nativeProps[key] = ConversionTables[key][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n\n  return nativeProps;\n}\n\nexport function ensureNativeProps(props?: CameraProps): CameraNativeProps {\n  const newProps = convertNativeProps(props);\n\n  if (newProps.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (newProps.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n\n  return newProps;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}