{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport ExponentAV from \"../ExponentAV\";\nvar _enabled = true;\nexport function isAudioEnabled() {\n  return _enabled;\n}\nexport function throwIfAudioIsDisabled() {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\nexport function setIsEnabledAsync(_x) {\n  return _setIsEnabledAsync.apply(this, arguments);\n}\n\nfunction _setIsEnabledAsync() {\n  _setIsEnabledAsync = _asyncToGenerator(function* (value) {\n    _enabled = value;\n    yield ExponentAV.setAudioIsEnabled(value);\n  });\n  return _setIsEnabledAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../../src/Audio/AudioAvailability.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP;AAEA,IAAI,QAAQ,GAAG,IAAf;AAEA,OAAM,SAAU,cAAV,GAAwB;EAC5B,OAAO,QAAP;AACD;AAED,OAAM,SAAU,sBAAV,GAAgC;EACpC,IAAI,CAAC,QAAL,EAAe;IACb,MAAM,IAAI,KAAJ,CAAU,yDAAV,CAAN;EACD;AACF;AAQD,gBAAsB,iBAAtB;EAAA;AAAA;;;yCAAO,WAAiC,KAAjC,EAA+C;IACpD,QAAQ,GAAG,KAAX;IACA,MAAM,UAAU,CAAC,iBAAX,CAA6B,KAA7B,CAAN;EAKD,C","sourcesContent":["import ExponentAV from '../ExponentAV';\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n  return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\n// @needsAudit\n/**\n * Audio is enabled by default, but if you want to write your own Audio API in a bare workflow app, you might want to disable the Audio API.\n * @param value `true` enables Audio, and `false` disables it.\n * @return A `Promise` that will reject if audio playback could not be enabled for the device.\n */\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n  _enabled = value;\n  await ExponentAV.setAudioIsEnabled(value);\n  // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n  // players when enabled. Perhaps for completeness we should allow this; the design of the\n  // enabling API is for people to enable / disable this audio library, but I think that it should\n  // intuitively also double as a global pause/resume.\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}